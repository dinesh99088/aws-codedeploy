name: Code Deploy to Amazon ECS

on:
  push:
    branches: [ "main" ]

env:
  AWS_REGION: us-east-1
  ECR_REPOSITORY: demo-app

permissions:
  contents: read

jobs:
  CodeDeploy:
    name: Deploy
    runs-on: ubuntu-latest
    environment: production

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Add profile credentials to ~/.aws/credentials
      run: |
        aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }} --profile default
        aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }} --profile default

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push image to Amazon ECR
      id: build-image
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        IMAGE_TAG: ${{ github.sha }}
      run: |
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        echo "image=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG" >> $GITHUB_OUTPUT
        REGISTRY=$(echo $ECR_REGISTRY)/$(echo $ECR_REPOSITORY):$(echo $IMAGE_TAG) && sed -i 's|<IMAGE>|'${REGISTRY}'|' $GITHUB_WORKSPACE/ecs_terraform/container-definitions/container-def.json

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_version: 1.1.7
      
    - name: Terraform Init
      id: init
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      run: terraform init -input=false
      working-directory: ./ecs_terraform

    - name: Terraform Validate
      id: validate
      run: terraform validate -no-color
      working-directory: ./ecs_terraform

    - name: Terraform Plan
      id: plan
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      run: terraform plan -no-color -var="key_name=DevServer" -var="cluster_name=ecs_workshop_cluster"
      continue-on-error: true
      working-directory: ./ecs_terraform

    - name: Terraform Apply
      run: terraform apply -auto-approve -var="key_name=DevServer" -var="cluster_name=ecs_workshop_cluster"
      working-directory: ./ecs_terraform
    
    # - name: Terraform destroy
    #   run: terraform destroy -auto-approve -var="key_name=DevServer" -var="cluster_name=ecs_workshop_cluster"
    #   working-directory: ./ecs_terraform